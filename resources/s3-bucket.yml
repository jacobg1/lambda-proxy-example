
  Resources:
    S3BucketExample:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: s3example-${opt:stage, 'dev'}
        PublicAccessBlockConfiguration: 
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
      
    DocUploadRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: upload-policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                    - s3:GetObject
                    - s3:ListBucket
                  Resource:
                    !Sub
                      - "arn:aws:s3:::${BucketName}/*"
                      - {BucketName: !Ref S3BucketExample}
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    Fn::Sub:
                      - arn:aws:logs:${Region}:${AccountId}:log-group:/aws/lambda/*:*:*
                      - { Region: !Ref AWS::Region, AccountId: !Ref AWS::AccountId }

  Outputs:
    S3BucketExample:
      Value:
        Ref: S3BucketExample